# Workflow for deploying static content to GitHub Pages
name: Deploy bSDD-filter-UI to GitHub Pages

on:
  # The workflow triggers on pushes to the main branch, creation of any tag, and pull requests
  push:
    branches: ['main']
    tags: ['*']
  pull_request_target:
    branches: ['main']

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  # Security check: Ensure PR is from a trusted contributor
  security-check:
    runs-on: ubuntu-latest
    outputs:
      trusted: ${{ steps.check-author.outputs.trusted }}
    steps:
      - name: Check if PR author is a collaborator
        id: check-author
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_AUTHOR="${{ github.event.pull_request.user.login }}"
          echo "Checking if $PR_AUTHOR is a collaborator..."

          IS_COLLABORATOR=$(curl -s -o /dev/null -w "%{http_code}" \
            -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/${{ github.repository }}/collaborators/$PR_AUTHOR")

          if [ "$IS_COLLABORATOR" -eq 204 ]; then
            echo "trusted=true" >> $GITHUB_ENV
            echo "::set-output name=trusted::true"
          else
            echo "trusted=false" >> $GITHUB_ENV
            echo "::set-output name=trusted::false"
          fi

  # Deploy job with three steps: one for main branch, one for release tags, and one for pull requests
  deploy:
    needs: [security-check]
    if: needs.security-check.outputs.trusted == 'true' || github.event_name == 'push'
    environment:
      name: github-pages
      url: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && 'https://buildingsmart-community.github.io/bSDD-filter-UI/main/' || startsWith(github.ref, 'refs/tags/') && format('https://buildingsmart-community.github.io/bSDD-filter-UI/{0}', github.ref_name) || github.event_name == 'pull_request_target' && format('https://buildingsmart-community.github.io/bSDD-filter-UI/pr-{0}/', github.event.number) || 'https://buildingsmart-community.github.io/bSDD-filter-UI/' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies and build
        env:
          BASE_PATH: ${{ format('/bSDD-filter-UI/{0}/', github.ref_name) }}
          VITE_APP_VERSION: ${{ github.ref == 'refs/heads/main' && github.ref_name || github.ref_name }}
        run: |
          yarn install
          yarn run build

      - name: Deploy to GitHub Pages (main)
        if: github.ref == 'refs/heads/main'
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: dist
          target-folder: main
          clean: true

      - name: Deploy to GitHub Pages (latest release)
        if: startsWith(github.ref, 'refs/tags/')
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: dist
          target-folder: latest
          clean: true

      - name: Deploy to GitHub Pages (specific release)
        if: startsWith(github.ref, 'refs/tags/')
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: dist
          target-folder: ${{ github.ref_name }}
          clean: true

      - name: Deploy to GitHub Pages (pull request)
        if: github.event_name == 'pull_request_target'
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: dist
          target-folder: pr-${{ github.event.number }}
          clean: true

  cleanup:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages

      - name: Remove PR folder if it exists
        run: |
          PR_FOLDER="pr-${{ github.event.pull_request.number }}"
          if [ -d "$PR_FOLDER" ]; then
            rm -rf "$PR_FOLDER"
            git config --global user.name 'github-actions[bot]'
            git config --global user.email 'github-actions[bot]@users.noreply.github.com'
            git add .
            git commit -m "Remove PR #${{ github.event.pull_request.number }} deployment" || echo "No changes to commit."
            git push
          else
            echo "PR folder does not exist, skipping cleanup."
