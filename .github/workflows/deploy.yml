# Workflow for deploying static content to GitHub Pages
name: Deploy bSDD-filter-UI to GitHub Pages

on:
  # The workflow triggers on pushes to the main branch, creation of any tag, and pull requests
  push:
    branches: ["main"]
    tags: ["*"]
  pull_request:
    branches: ["main"]
  pull_request_target:
    types: [closed]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Security check job to ensure the PR is from a trusted organization member
  security-check:
    runs-on: ubuntu-latest
    steps:
      - name: Print event payload for debugging
        run: cat $GITHUB_EVENT_PATH

      - name: Check if PR is from a trusted organization member
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_AUTHOR=$(jq -r .pull_request.user.login "$GITHUB_EVENT_PATH")
          echo "PR Author: $PR_AUTHOR"
          ORG_MEMBERS_RESPONSE=$(curl -s -H "Authorization: token $GITHUB_TOKEN" "https://api.github.com/orgs/buildingsmart-community/members")
          echo "Organization Members Response: $ORG_MEMBERS_RESPONSE"
          ORG_MEMBERS=$(echo "$ORG_MEMBERS_RESPONSE" | jq -r '.[].login')
          echo "Organization Members: $ORG_MEMBERS"
          if echo "$ORG_MEMBERS" | grep -q "$PR_AUTHOR"; then
            echo "User is a trusted organization member."
          else
            echo "User is not a trusted organization member. Exiting."
            exit 1
          fi

  # Deploy job with three steps: one for main branch, one for release tags, and one for pull requests
  deploy:
    needs: [security-check]
    environment:
      name: github-pages
      url: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && 'https://buildingsmart-community.github.io/bSDD-filter-UI/main/' || startsWith(github.ref, 'refs/tags/') && format('https://buildingsmart-community.github.io/bSDD-filter-UI/{0}', github.ref_name) || github.event_name == 'pull_request' && format('https://buildingsmart-community.github.io/bSDD-filter-UI/pr-{0}/', github.event.number) || 'https://buildingsmart-community.github.io/bSDD-filter-UI/' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies and build
        env:
          BASE_PATH: ${{ format('/bSDD-filter-UI/{0}/', github.ref_name) }}
          VITE_APP_VERSION: ${{ github.ref == 'refs/heads/main' && github.ref_name || github.ref_name }}
        run: |
          yarn install
          yarn run build

      - name: Deploy to GitHub Pages (main)
        if: github.ref == 'refs/heads/main'
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: dist
          target-folder: main
          clean: true

      - name: Deploy to GitHub Pages (latest release)
        if: startsWith(github.ref, 'refs/tags/')
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: dist
          target-folder: latest
          clean: true

      - name: Deploy to GitHub Pages (specific release)
        if: startsWith(github.ref, 'refs/tags/')
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: dist
          target-folder: ${{ github.ref_name }}
          clean: true

      - name: Deploy to GitHub Pages (pull request)
        if: github.event_name == 'pull_request'
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: dist
          target-folder: pr-${{ github.event.number }}
          clean: true

  cleanup:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages

      - name: Remove PR folder
        run: |
          rm -rf pr-${{ github.event.pull_request.number }}
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          if git status --porcelain | grep .; then
            git add .
            git commit -m "Remove PR #${{ github.event.pull_request.number }} deployment"
            git push
          else
            echo "No changes to commit."
          fi
