import{u as g,r as S,h as d,i as l,a7 as n,m as b,a8 as h,k as p}from"./defaultSettings-0c220327.js";const I=()=>{const e=g();return S.useEffect(()=>{let a,s;const f=async()=>{try{await window.CefSharp?.BindObjectAsync("bsddBridge"),window.bsddBridge?(await window.bsddBridge.loadBridgeData().then(t=>{console.log("CefSharp loadBridgeData.");const c=JSON.parse(t);console.log("CefSharp bsddBridgeData:",c);const{ifcData:o,settings:r,propertyIsInstanceMap:i}=c;r&&(e(d(r)),console.log("CefSharp settings:",r)),o?.length>0&&(e(n(o)),e(h(o[0])),console.log("CefSharp initial IFC entities:",o)),i&&(e(p(i)),console.log("CefSharp propertyIsInstanceMap:",i))}),window.updateSelection=t=>{e(n(t)),console.log("CefSharp updateSelection:",t)},window.updateSettings=async t=>{e(d(t)),console.log("CefSharp updateSettings:",t)},console.log("CefSharp connection and global functions are set up successfully.")):(console.error("Failed to bind the bsddBridge object."),e(d(l)))}catch(t){console.error("Error setting up CefSharp connection:",t)}};return a=setInterval(()=>{window.CefSharp?(clearInterval(a),clearTimeout(s),f()):console.log("Waiting for CefSharp to be available...")},100),s=setTimeout(()=>{clearInterval(a),console.log("CefSharp not available, loading default settings."),e(d(l)),e(n(b?.ifcData||[]))},1e3),()=>{clearInterval(a),clearTimeout(s)}},[e]),{bsddSearch:a=>{const s=JSON.stringify(a);window?.bsddBridge?.bsddSearch?window.bsddBridge.bsddSearch(s):console.error("bsddBridge or bsddSearch method is not available.")},bsddSelect:a=>{const s=JSON.stringify(a);window?.bsddBridge?.bsddSelect?window.bsddBridge.bsddSelect(s):console.error("bsddBridge or bsddSelect method is not available.")},bsddSearchSave:a=>{const s=JSON.stringify(a);return window?.bsddBridge?.save?window.bsddBridge.save(s):(console.error("bsddBridge or save method is not available."),Promise.resolve("error"))},bsddSearchCancel:()=>{window?.bsddBridge?.cancel?window.bsddBridge.cancel():console.error("bsddBridge or cancel method is not available.")}}};export{I as u};
